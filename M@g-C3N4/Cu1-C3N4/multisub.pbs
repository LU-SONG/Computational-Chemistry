#!/bin/bash
#PBS -N vasp_serial
#PBS -l nodes=1:ppn=48
#PBS -q kgz48
#PBS -V
#PBS -S /bin/bash
### Set intel environment###
module load hdf5
module load gcc/9.3.0
source /public/software/intel2020u2/intel2020u2_env.sh

start_time=$(date +"%Y-%m-%d %H:%M:%S")
cd $PBS_O_WORKDIR

# 获取所有子目录
task_dirs=($(find . -mindepth 1 -maxdepth 1 -type d))
#task_dirs=()
# 设置任务数量
num_tasks=${#task_dirs[@]}

# 任务监控
energy_path=$(if [ -f "energy.txt" ]; then echo "new_energy.txt"; else echo "energy.txt"; fi)
rm new_energy.txt running_job completed_job
echo "species        energy            force" > $energy_path

for ((i=0; i<$num_tasks; i++)); do
    task_dir=${task_dirs[$i]}

    # 进入任务目录
    cd $task_dir
    NP=`cat $PBS_NODEFILE | wc -l`
    NN=`cat $PBS_NODEFILE | sort | uniq | tee /tmp/nodes.$$ | wc -l`
    cat $PBS_NODEFILE > /tmp/nodefile.$$
    echo $(i+1) $(pwd) > $PBS_O_WORKDIR/running_job

    # 执行任务命令
    # mpirun -machinefile /tmp/nodefile.$$ -n $NP /public/software/vasp.6.3.2/bin/vasp_fixZ 1>out 2>err
    mpirun  -machinefile /tmp/nodefile.$$ -n $NP /public/software/vasp.6.3.2/bin/vasp_gam 1>log 2>err 
    echo $(i+1) $(pwd) >> $PBS_O_WORKDIR/completed_job

    # 清理临时文件
    rm -rf /tmp/nodefile.$$
    rm -rf /tmp/nodes.$$
    # 保存能量
    bash /public/home/sl/scripts/ta.sh | awk '{print $1 "          " $13 "     " $10}' | tail -2 | head -1  >> $PBS_O_WORKDIR/$energy_path
    # 返回上一级目录
    cd $OLDPWD
done

end_time=$(date +"%Y-%m-%d %H:%M:%S")
start_seconds=$(date -d "$start_time" +%s)
end_seconds=$(date -d "$end_time" +%s)
elapsed_seconds=$((end_seconds - start_seconds))
elapsed_minutes=$(echo "scale=1; $elapsed_seconds / 60" | bc)"min"

echo $(date) $PBS_JOBID $USER $PBS_JOBNAME $PBS_O_WORKDIR $elapsed_minutes >> ~/mail

